/* 
 * Satstream API
 *
 * Satstream API
 *
 * OpenAPI spec version: 1.0
 * Contact: team@satstream.io
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */


#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct RequestsGetChainTxStatsRequest {
  /// Optional: The hash of the block that ends the window (default=chain tip)
  #[serde(rename = "blockhash")]
  blockhash: Option<String>,
  /// Optional: Size of the window in number of blocks (default=one month)
  #[serde(rename = "nblocks")]
  nblocks: Option<i32>
}

impl RequestsGetChainTxStatsRequest {
  pub fn new() -> RequestsGetChainTxStatsRequest {
    RequestsGetChainTxStatsRequest {
      blockhash: None,
      nblocks: None
    }
  }

  pub fn set_blockhash(&mut self, blockhash: String) {
    self.blockhash = Some(blockhash);
  }

  pub fn with_blockhash(mut self, blockhash: String) -> RequestsGetChainTxStatsRequest {
    self.blockhash = Some(blockhash);
    self
  }

  pub fn blockhash(&self) -> Option<&String> {
    self.blockhash.as_ref()
  }

  pub fn reset_blockhash(&mut self) {
    self.blockhash = None;
  }

  pub fn set_nblocks(&mut self, nblocks: i32) {
    self.nblocks = Some(nblocks);
  }

  pub fn with_nblocks(mut self, nblocks: i32) -> RequestsGetChainTxStatsRequest {
    self.nblocks = Some(nblocks);
    self
  }

  pub fn nblocks(&self) -> Option<&i32> {
    self.nblocks.as_ref()
  }

  pub fn reset_nblocks(&mut self) {
    self.nblocks = None;
  }

}



