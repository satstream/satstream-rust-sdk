/* 
 * Satstream API
 *
 * Satstream API
 *
 * OpenAPI spec version: 1.0
 * Contact: team@satstream.io
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */


#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct GithubComSatstreamSsUtilsBitcoinCliChainTxStats {
  /// The timestamp for the final block in the window
  #[serde(rename = "time")]
  time: Option<i32>,
  /// The total number of transactions in the chain
  #[serde(rename = "txcount")]
  txcount: Option<i32>,
  /// The average rate of transactions per second
  #[serde(rename = "txrate")]
  txrate: Option<f32>,
  /// Size of the window in number of blocks
  #[serde(rename = "window_block_count")]
  window_block_count: Option<i32>,
  /// The hash of the final block in the window
  #[serde(rename = "window_final_block_hash")]
  window_final_block_hash: Option<String>,
  /// The height of the final block in the window
  #[serde(rename = "window_final_block_height")]
  window_final_block_height: Option<i32>,
  /// The elapsed time in the window in seconds
  #[serde(rename = "window_interval")]
  window_interval: Option<i32>,
  /// The number of transactions in the window
  #[serde(rename = "window_tx_count")]
  window_tx_count: Option<i32>
}

impl GithubComSatstreamSsUtilsBitcoinCliChainTxStats {
  pub fn new() -> GithubComSatstreamSsUtilsBitcoinCliChainTxStats {
    GithubComSatstreamSsUtilsBitcoinCliChainTxStats {
      time: None,
      txcount: None,
      txrate: None,
      window_block_count: None,
      window_final_block_hash: None,
      window_final_block_height: None,
      window_interval: None,
      window_tx_count: None
    }
  }

  pub fn set_time(&mut self, time: i32) {
    self.time = Some(time);
  }

  pub fn with_time(mut self, time: i32) -> GithubComSatstreamSsUtilsBitcoinCliChainTxStats {
    self.time = Some(time);
    self
  }

  pub fn time(&self) -> Option<&i32> {
    self.time.as_ref()
  }

  pub fn reset_time(&mut self) {
    self.time = None;
  }

  pub fn set_txcount(&mut self, txcount: i32) {
    self.txcount = Some(txcount);
  }

  pub fn with_txcount(mut self, txcount: i32) -> GithubComSatstreamSsUtilsBitcoinCliChainTxStats {
    self.txcount = Some(txcount);
    self
  }

  pub fn txcount(&self) -> Option<&i32> {
    self.txcount.as_ref()
  }

  pub fn reset_txcount(&mut self) {
    self.txcount = None;
  }

  pub fn set_txrate(&mut self, txrate: f32) {
    self.txrate = Some(txrate);
  }

  pub fn with_txrate(mut self, txrate: f32) -> GithubComSatstreamSsUtilsBitcoinCliChainTxStats {
    self.txrate = Some(txrate);
    self
  }

  pub fn txrate(&self) -> Option<&f32> {
    self.txrate.as_ref()
  }

  pub fn reset_txrate(&mut self) {
    self.txrate = None;
  }

  pub fn set_window_block_count(&mut self, window_block_count: i32) {
    self.window_block_count = Some(window_block_count);
  }

  pub fn with_window_block_count(mut self, window_block_count: i32) -> GithubComSatstreamSsUtilsBitcoinCliChainTxStats {
    self.window_block_count = Some(window_block_count);
    self
  }

  pub fn window_block_count(&self) -> Option<&i32> {
    self.window_block_count.as_ref()
  }

  pub fn reset_window_block_count(&mut self) {
    self.window_block_count = None;
  }

  pub fn set_window_final_block_hash(&mut self, window_final_block_hash: String) {
    self.window_final_block_hash = Some(window_final_block_hash);
  }

  pub fn with_window_final_block_hash(mut self, window_final_block_hash: String) -> GithubComSatstreamSsUtilsBitcoinCliChainTxStats {
    self.window_final_block_hash = Some(window_final_block_hash);
    self
  }

  pub fn window_final_block_hash(&self) -> Option<&String> {
    self.window_final_block_hash.as_ref()
  }

  pub fn reset_window_final_block_hash(&mut self) {
    self.window_final_block_hash = None;
  }

  pub fn set_window_final_block_height(&mut self, window_final_block_height: i32) {
    self.window_final_block_height = Some(window_final_block_height);
  }

  pub fn with_window_final_block_height(mut self, window_final_block_height: i32) -> GithubComSatstreamSsUtilsBitcoinCliChainTxStats {
    self.window_final_block_height = Some(window_final_block_height);
    self
  }

  pub fn window_final_block_height(&self) -> Option<&i32> {
    self.window_final_block_height.as_ref()
  }

  pub fn reset_window_final_block_height(&mut self) {
    self.window_final_block_height = None;
  }

  pub fn set_window_interval(&mut self, window_interval: i32) {
    self.window_interval = Some(window_interval);
  }

  pub fn with_window_interval(mut self, window_interval: i32) -> GithubComSatstreamSsUtilsBitcoinCliChainTxStats {
    self.window_interval = Some(window_interval);
    self
  }

  pub fn window_interval(&self) -> Option<&i32> {
    self.window_interval.as_ref()
  }

  pub fn reset_window_interval(&mut self) {
    self.window_interval = None;
  }

  pub fn set_window_tx_count(&mut self, window_tx_count: i32) {
    self.window_tx_count = Some(window_tx_count);
  }

  pub fn with_window_tx_count(mut self, window_tx_count: i32) -> GithubComSatstreamSsUtilsBitcoinCliChainTxStats {
    self.window_tx_count = Some(window_tx_count);
    self
  }

  pub fn window_tx_count(&self) -> Option<&i32> {
    self.window_tx_count.as_ref()
  }

  pub fn reset_window_tx_count(&mut self) {
    self.window_tx_count = None;
  }

}



