/* 
 * Satstream API
 *
 * Satstream API
 *
 * OpenAPI spec version: 1.0
 * Contact: team@satstream.io
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */


#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct GithubComSatstreamSsUtilsOrdinalsTermsRange {
  #[serde(rename = "end")]
  end: Option<::models::BigInt>,
  #[serde(rename = "start")]
  start: Option<::models::BigInt>
}

impl GithubComSatstreamSsUtilsOrdinalsTermsRange {
  pub fn new() -> GithubComSatstreamSsUtilsOrdinalsTermsRange {
    GithubComSatstreamSsUtilsOrdinalsTermsRange {
      end: None,
      start: None
    }
  }

  pub fn set_end(&mut self, end: ::models::BigInt) {
    self.end = Some(end);
  }

  pub fn with_end(mut self, end: ::models::BigInt) -> GithubComSatstreamSsUtilsOrdinalsTermsRange {
    self.end = Some(end);
    self
  }

  pub fn end(&self) -> Option<&::models::BigInt> {
    self.end.as_ref()
  }

  pub fn reset_end(&mut self) {
    self.end = None;
  }

  pub fn set_start(&mut self, start: ::models::BigInt) {
    self.start = Some(start);
  }

  pub fn with_start(mut self, start: ::models::BigInt) -> GithubComSatstreamSsUtilsOrdinalsTermsRange {
    self.start = Some(start);
    self
  }

  pub fn start(&self) -> Option<&::models::BigInt> {
    self.start.as_ref()
  }

  pub fn reset_start(&mut self) {
    self.start = None;
  }

}



