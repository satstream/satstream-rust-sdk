/* 
 * Satstream API
 *
 * Satstream API
 *
 * OpenAPI spec version: 1.0
 * Contact: team@satstream.io
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */


#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct ResponsesGetAddressTimeframeBalanceItem {
  #[serde(rename = "balance")]
  balance: Option<String>,
  #[serde(rename = "blockRange")]
  block_range: Option<::models::ResponsesGetAddressTimeframeBalanceItemBlockRange>
}

impl ResponsesGetAddressTimeframeBalanceItem {
  pub fn new() -> ResponsesGetAddressTimeframeBalanceItem {
    ResponsesGetAddressTimeframeBalanceItem {
      balance: None,
      block_range: None
    }
  }

  pub fn set_balance(&mut self, balance: String) {
    self.balance = Some(balance);
  }

  pub fn with_balance(mut self, balance: String) -> ResponsesGetAddressTimeframeBalanceItem {
    self.balance = Some(balance);
    self
  }

  pub fn balance(&self) -> Option<&String> {
    self.balance.as_ref()
  }

  pub fn reset_balance(&mut self) {
    self.balance = None;
  }

  pub fn set_block_range(&mut self, block_range: ::models::ResponsesGetAddressTimeframeBalanceItemBlockRange) {
    self.block_range = Some(block_range);
  }

  pub fn with_block_range(mut self, block_range: ::models::ResponsesGetAddressTimeframeBalanceItemBlockRange) -> ResponsesGetAddressTimeframeBalanceItem {
    self.block_range = Some(block_range);
    self
  }

  pub fn block_range(&self) -> Option<&::models::ResponsesGetAddressTimeframeBalanceItemBlockRange> {
    self.block_range.as_ref()
  }

  pub fn reset_block_range(&mut self) {
    self.block_range = None;
  }

}



