/* 
 * Satstream API
 *
 * Satstream API
 *
 * OpenAPI spec version: 1.0
 * Contact: team@satstream.io
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */


#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct RequestsCreateRawTxInput {
  /// The sequence number Optional, default depends on the value of the 'replaceable' and 'locktime' arguments
  #[serde(rename = "sequence")]
  sequence: Option<i32>,
  /// The transaction id
  #[serde(rename = "txid")]
  txid: String,
  /// The output number
  #[serde(rename = "vout")]
  vout: i32
}

impl RequestsCreateRawTxInput {
  pub fn new(txid: String, vout: i32) -> RequestsCreateRawTxInput {
    RequestsCreateRawTxInput {
      sequence: None,
      txid: txid,
      vout: vout
    }
  }

  pub fn set_sequence(&mut self, sequence: i32) {
    self.sequence = Some(sequence);
  }

  pub fn with_sequence(mut self, sequence: i32) -> RequestsCreateRawTxInput {
    self.sequence = Some(sequence);
    self
  }

  pub fn sequence(&self) -> Option<&i32> {
    self.sequence.as_ref()
  }

  pub fn reset_sequence(&mut self) {
    self.sequence = None;
  }

  pub fn set_txid(&mut self, txid: String) {
    self.txid = txid;
  }

  pub fn with_txid(mut self, txid: String) -> RequestsCreateRawTxInput {
    self.txid = txid;
    self
  }

  pub fn txid(&self) -> &String {
    &self.txid
  }


  pub fn set_vout(&mut self, vout: i32) {
    self.vout = vout;
  }

  pub fn with_vout(mut self, vout: i32) -> RequestsCreateRawTxInput {
    self.vout = vout;
    self
  }

  pub fn vout(&self) -> &i32 {
    &self.vout
  }


}



