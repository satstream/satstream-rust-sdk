/* 
 * Satstream API
 *
 * Satstream API
 *
 * OpenAPI spec version: 1.0
 * Contact: team@satstream.io
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */


#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct ResponsesPaginationInfo {
  #[serde(rename = "page")]
  page: Option<i32>,
  #[serde(rename = "per_page")]
  per_page: Option<i32>,
  #[serde(rename = "total")]
  total: Option<i32>,
  #[serde(rename = "total_pages")]
  total_pages: Option<i32>
}

impl ResponsesPaginationInfo {
  pub fn new() -> ResponsesPaginationInfo {
    ResponsesPaginationInfo {
      page: None,
      per_page: None,
      total: None,
      total_pages: None
    }
  }

  pub fn set_page(&mut self, page: i32) {
    self.page = Some(page);
  }

  pub fn with_page(mut self, page: i32) -> ResponsesPaginationInfo {
    self.page = Some(page);
    self
  }

  pub fn page(&self) -> Option<&i32> {
    self.page.as_ref()
  }

  pub fn reset_page(&mut self) {
    self.page = None;
  }

  pub fn set_per_page(&mut self, per_page: i32) {
    self.per_page = Some(per_page);
  }

  pub fn with_per_page(mut self, per_page: i32) -> ResponsesPaginationInfo {
    self.per_page = Some(per_page);
    self
  }

  pub fn per_page(&self) -> Option<&i32> {
    self.per_page.as_ref()
  }

  pub fn reset_per_page(&mut self) {
    self.per_page = None;
  }

  pub fn set_total(&mut self, total: i32) {
    self.total = Some(total);
  }

  pub fn with_total(mut self, total: i32) -> ResponsesPaginationInfo {
    self.total = Some(total);
    self
  }

  pub fn total(&self) -> Option<&i32> {
    self.total.as_ref()
  }

  pub fn reset_total(&mut self) {
    self.total = None;
  }

  pub fn set_total_pages(&mut self, total_pages: i32) {
    self.total_pages = Some(total_pages);
  }

  pub fn with_total_pages(mut self, total_pages: i32) -> ResponsesPaginationInfo {
    self.total_pages = Some(total_pages);
    self
  }

  pub fn total_pages(&self) -> Option<&i32> {
    self.total_pages.as_ref()
  }

  pub fn reset_total_pages(&mut self) {
    self.total_pages = None;
  }

}



