/* 
 * Satstream API
 *
 * Satstream API
 *
 * OpenAPI spec version: 1.0
 * Contact: team@satstream.io
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */


#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct GithubComSatstreamSsUtilsOrdinalsTerms {
  #[serde(rename = "amount")]
  amount: Option<::models::BigInt>,
  #[serde(rename = "cap")]
  cap: Option<::models::BigInt>,
  #[serde(rename = "height")]
  height: Option<::models::GithubComSatstreamSsUtilsOrdinalsTermsRange>,
  #[serde(rename = "offset")]
  offset: Option<::models::GithubComSatstreamSsUtilsOrdinalsTermsRange>
}

impl GithubComSatstreamSsUtilsOrdinalsTerms {
  pub fn new() -> GithubComSatstreamSsUtilsOrdinalsTerms {
    GithubComSatstreamSsUtilsOrdinalsTerms {
      amount: None,
      cap: None,
      height: None,
      offset: None
    }
  }

  pub fn set_amount(&mut self, amount: ::models::BigInt) {
    self.amount = Some(amount);
  }

  pub fn with_amount(mut self, amount: ::models::BigInt) -> GithubComSatstreamSsUtilsOrdinalsTerms {
    self.amount = Some(amount);
    self
  }

  pub fn amount(&self) -> Option<&::models::BigInt> {
    self.amount.as_ref()
  }

  pub fn reset_amount(&mut self) {
    self.amount = None;
  }

  pub fn set_cap(&mut self, cap: ::models::BigInt) {
    self.cap = Some(cap);
  }

  pub fn with_cap(mut self, cap: ::models::BigInt) -> GithubComSatstreamSsUtilsOrdinalsTerms {
    self.cap = Some(cap);
    self
  }

  pub fn cap(&self) -> Option<&::models::BigInt> {
    self.cap.as_ref()
  }

  pub fn reset_cap(&mut self) {
    self.cap = None;
  }

  pub fn set_height(&mut self, height: ::models::GithubComSatstreamSsUtilsOrdinalsTermsRange) {
    self.height = Some(height);
  }

  pub fn with_height(mut self, height: ::models::GithubComSatstreamSsUtilsOrdinalsTermsRange) -> GithubComSatstreamSsUtilsOrdinalsTerms {
    self.height = Some(height);
    self
  }

  pub fn height(&self) -> Option<&::models::GithubComSatstreamSsUtilsOrdinalsTermsRange> {
    self.height.as_ref()
  }

  pub fn reset_height(&mut self) {
    self.height = None;
  }

  pub fn set_offset(&mut self, offset: ::models::GithubComSatstreamSsUtilsOrdinalsTermsRange) {
    self.offset = Some(offset);
  }

  pub fn with_offset(mut self, offset: ::models::GithubComSatstreamSsUtilsOrdinalsTermsRange) -> GithubComSatstreamSsUtilsOrdinalsTerms {
    self.offset = Some(offset);
    self
  }

  pub fn offset(&self) -> Option<&::models::GithubComSatstreamSsUtilsOrdinalsTermsRange> {
    self.offset.as_ref()
  }

  pub fn reset_offset(&mut self) {
    self.offset = None;
  }

}



