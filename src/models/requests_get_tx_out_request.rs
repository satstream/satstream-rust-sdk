/* 
 * Satstream API
 *
 * Satstream API
 *
 * OpenAPI spec version: 1.0
 * Contact: team@satstream.io
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */


#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct RequestsGetTxOutRequest {
  /// Optional: Whether to include the mempool (default=true)
  #[serde(rename = "include_mempool")]
  include_mempool: Option<bool>,
  /// Required: vout number
  #[serde(rename = "n")]
  n: Option<i32>,
  /// Required: The transaction id
  #[serde(rename = "txid")]
  txid: Option<String>
}

impl RequestsGetTxOutRequest {
  pub fn new() -> RequestsGetTxOutRequest {
    RequestsGetTxOutRequest {
      include_mempool: None,
      n: None,
      txid: None
    }
  }

  pub fn set_include_mempool(&mut self, include_mempool: bool) {
    self.include_mempool = Some(include_mempool);
  }

  pub fn with_include_mempool(mut self, include_mempool: bool) -> RequestsGetTxOutRequest {
    self.include_mempool = Some(include_mempool);
    self
  }

  pub fn include_mempool(&self) -> Option<&bool> {
    self.include_mempool.as_ref()
  }

  pub fn reset_include_mempool(&mut self) {
    self.include_mempool = None;
  }

  pub fn set_n(&mut self, n: i32) {
    self.n = Some(n);
  }

  pub fn with_n(mut self, n: i32) -> RequestsGetTxOutRequest {
    self.n = Some(n);
    self
  }

  pub fn n(&self) -> Option<&i32> {
    self.n.as_ref()
  }

  pub fn reset_n(&mut self) {
    self.n = None;
  }

  pub fn set_txid(&mut self, txid: String) {
    self.txid = Some(txid);
  }

  pub fn with_txid(mut self, txid: String) -> RequestsGetTxOutRequest {
    self.txid = Some(txid);
    self
  }

  pub fn txid(&self) -> Option<&String> {
    self.txid.as_ref()
  }

  pub fn reset_txid(&mut self) {
    self.txid = None;
  }

}



