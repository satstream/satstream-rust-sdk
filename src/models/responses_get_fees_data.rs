/* 
 * Satstream API
 *
 * Satstream API
 *
 * OpenAPI spec version: 1.0
 * Contact: team@satstream.io
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */


#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct ResponsesGetFeesData {
  #[serde(rename = "confirmation_blocks")]
  confirmation_blocks: Option<i32>,
  #[serde(rename = "fee_rate_in_btc")]
  fee_rate_in_btc: Option<f32>
}

impl ResponsesGetFeesData {
  pub fn new() -> ResponsesGetFeesData {
    ResponsesGetFeesData {
      confirmation_blocks: None,
      fee_rate_in_btc: None
    }
  }

  pub fn set_confirmation_blocks(&mut self, confirmation_blocks: i32) {
    self.confirmation_blocks = Some(confirmation_blocks);
  }

  pub fn with_confirmation_blocks(mut self, confirmation_blocks: i32) -> ResponsesGetFeesData {
    self.confirmation_blocks = Some(confirmation_blocks);
    self
  }

  pub fn confirmation_blocks(&self) -> Option<&i32> {
    self.confirmation_blocks.as_ref()
  }

  pub fn reset_confirmation_blocks(&mut self) {
    self.confirmation_blocks = None;
  }

  pub fn set_fee_rate_in_btc(&mut self, fee_rate_in_btc: f32) {
    self.fee_rate_in_btc = Some(fee_rate_in_btc);
  }

  pub fn with_fee_rate_in_btc(mut self, fee_rate_in_btc: f32) -> ResponsesGetFeesData {
    self.fee_rate_in_btc = Some(fee_rate_in_btc);
    self
  }

  pub fn fee_rate_in_btc(&self) -> Option<&f32> {
    self.fee_rate_in_btc.as_ref()
  }

  pub fn reset_fee_rate_in_btc(&mut self) {
    self.fee_rate_in_btc = None;
  }

}



