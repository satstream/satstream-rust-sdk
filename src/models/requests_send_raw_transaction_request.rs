/* 
 * Satstream API
 *
 * Satstream API
 *
 * OpenAPI spec version: 1.0
 * Contact: team@satstream.io
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */


#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct RequestsSendRawTransactionRequest {
  /// The hex string of the raw transaction
  #[serde(rename = "hex_string")]
  hex_string: Option<String>,
  /// Optional: Reject transactions whose fee rate is higher than this value (BTC/kvB)
  #[serde(rename = "max_fee_rate")]
  max_fee_rate: Option<f32>
}

impl RequestsSendRawTransactionRequest {
  pub fn new() -> RequestsSendRawTransactionRequest {
    RequestsSendRawTransactionRequest {
      hex_string: None,
      max_fee_rate: None
    }
  }

  pub fn set_hex_string(&mut self, hex_string: String) {
    self.hex_string = Some(hex_string);
  }

  pub fn with_hex_string(mut self, hex_string: String) -> RequestsSendRawTransactionRequest {
    self.hex_string = Some(hex_string);
    self
  }

  pub fn hex_string(&self) -> Option<&String> {
    self.hex_string.as_ref()
  }

  pub fn reset_hex_string(&mut self) {
    self.hex_string = None;
  }

  pub fn set_max_fee_rate(&mut self, max_fee_rate: f32) {
    self.max_fee_rate = Some(max_fee_rate);
  }

  pub fn with_max_fee_rate(mut self, max_fee_rate: f32) -> RequestsSendRawTransactionRequest {
    self.max_fee_rate = Some(max_fee_rate);
    self
  }

  pub fn max_fee_rate(&self) -> Option<&f32> {
    self.max_fee_rate.as_ref()
  }

  pub fn reset_max_fee_rate(&mut self) {
    self.max_fee_rate = None;
  }

}



