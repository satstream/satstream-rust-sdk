/* 
 * Satstream API
 *
 * Satstream API
 *
 * OpenAPI spec version: 1.0
 * Contact: team@satstream.io
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */


#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct ResponsesGetRuneHoldersData {
  #[serde(rename = "holders")]
  holders: Option<Vec<::models::ResponsesRuneHolder>>,
  #[serde(rename = "pagination")]
  pagination: Option<::models::ResponsesPaginationInfo>
}

impl ResponsesGetRuneHoldersData {
  pub fn new() -> ResponsesGetRuneHoldersData {
    ResponsesGetRuneHoldersData {
      holders: None,
      pagination: None
    }
  }

  pub fn set_holders(&mut self, holders: Vec<::models::ResponsesRuneHolder>) {
    self.holders = Some(holders);
  }

  pub fn with_holders(mut self, holders: Vec<::models::ResponsesRuneHolder>) -> ResponsesGetRuneHoldersData {
    self.holders = Some(holders);
    self
  }

  pub fn holders(&self) -> Option<&Vec<::models::ResponsesRuneHolder>> {
    self.holders.as_ref()
  }

  pub fn reset_holders(&mut self) {
    self.holders = None;
  }

  pub fn set_pagination(&mut self, pagination: ::models::ResponsesPaginationInfo) {
    self.pagination = Some(pagination);
  }

  pub fn with_pagination(mut self, pagination: ::models::ResponsesPaginationInfo) -> ResponsesGetRuneHoldersData {
    self.pagination = Some(pagination);
    self
  }

  pub fn pagination(&self) -> Option<&::models::ResponsesPaginationInfo> {
    self.pagination.as_ref()
  }

  pub fn reset_pagination(&mut self) {
    self.pagination = None;
  }

}



