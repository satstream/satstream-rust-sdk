/* 
 * Satstream API
 *
 * Satstream API
 *
 * OpenAPI spec version: 1.0
 * Contact: team@satstream.io
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */


#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct MempoolSequence {
  /// The mempool sequence value
  #[serde(rename = "mempool_sequence")]
  mempool_sequence: Option<i32>,
  /// The transaction ids
  #[serde(rename = "txids")]
  txids: Option<Vec<String>>
}

impl MempoolSequence {
  pub fn new() -> MempoolSequence {
    MempoolSequence {
      mempool_sequence: None,
      txids: None
    }
  }

  pub fn set_mempool_sequence(&mut self, mempool_sequence: i32) {
    self.mempool_sequence = Some(mempool_sequence);
  }

  pub fn with_mempool_sequence(mut self, mempool_sequence: i32) -> MempoolSequence {
    self.mempool_sequence = Some(mempool_sequence);
    self
  }

  pub fn mempool_sequence(&self) -> Option<&i32> {
    self.mempool_sequence.as_ref()
  }

  pub fn reset_mempool_sequence(&mut self) {
    self.mempool_sequence = None;
  }

  pub fn set_txids(&mut self, txids: Vec<String>) {
    self.txids = Some(txids);
  }

  pub fn with_txids(mut self, txids: Vec<String>) -> MempoolSequence {
    self.txids = Some(txids);
    self
  }

  pub fn txids(&self) -> Option<&Vec<String>> {
    self.txids.as_ref()
  }

  pub fn reset_txids(&mut self) {
    self.txids = None;
  }

}



